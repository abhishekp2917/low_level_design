In Strategy design pattern, we encapsulate the strategy or logic of a particular 
functionality or method of an object. This encapsulated  object has only one function 
that it performs which will be used by the other object which needs this logic. 

In this way, by using Strategy Pattern we decouple the method with its implementation
so that whenever we have to change the implementation logic of the method we don't have
to change the method. Instead, we just have to pass the object of the desired 
strategy to the method.

Strategy pattern is used when the implementation logic of particular object method
changes frequently. Moreover, it is used when similar object have different 
implementation logic for same functionality.

For instance, in an organization an employee can be a software developer, data analyst,
manager etc and each of them have different roles and there roles updates frequently
so instead of changing there implementation whenever there is requirement for change,
we can just change the implementation or startegy object. 

_____________________________________________________________________________________

When to use Strategy Pattern:

When there are multiple startegy or logic for same functionality or method and based
on senario we want to implement that method using different different logic, then 
in that case we can use Strategy Pattern where we will encapsulate each logic 
into different class and based on our requirement we will use that class object
in our method by implementing that logic.
