Observer design pattern uses concept of notifying instead of polling. Here there is 
one to many relationship between objects i.e. multiple objects (Observers) are 
dependent on one object (Observable/ Subject) and whenever there is a change in 
observable class all the observer must be notified or updated about the current 
status.

In this pattern observers doesn't required to check the current status whether any 
event has been triggered or not instead whenever there is an event happens, observable
or subject notify all the observers or dependent objects about the update.

This pattern can be used in realtime chat application in which whenever a user sends a 
message receiver gets notified of the message, Social media platform like youtube in 
which whenever a channel uploads a new video all of its subscriber gets notified.

_____________________________________________________________________________________

When to use Observer Pattern:

When multiple objects say observer depend on one single object say subject and 
whenever there is some modification to subject then observer must be notified 
or updated then we must use Observer Pattern