_______________________________________Problem_________________________________________

suppose there is an abstract class name 'Quadrilateral' from which different shapes are 
extended and this shapes have various methods and properties. Now, if we want to make
multiple shapes then we would have to create objects of that shape and from that 
object we can implement methods that will create that particular shape.

But what if we have changed logic to create shape, then we would have to change the 
code in all places where we have implemented the method of that object to create that
shape.

_____________________________________Solution___________________________________________

To solve this problem , we use Facade pattern in which there is an implementer class
which acts as an interface and to create various shapes we will use that interface 
(implementer class) which will internally implement the logic to create various 
shapes and if we change the logic of creating shape the we just have to change that
in implementer class and not there where we are creating and using that shape. 

